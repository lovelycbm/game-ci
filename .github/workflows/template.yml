name: 지니 게임 배포 🎮

on: push

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  testRunner:
    name: Test in ${{ matrix.testMode }} ✨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
          - PlayMode
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-
      - uses: game-ci/unity-test-runner@v2.0-alpha-5
        id: testRunner
        with:
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} test results
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: Test results (${{ matrix.testMode }})
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildForAllSupportedPlatforms:
    needs: testRunner
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - iOS # Build an iOS player.
          - Android # Build an Android .apk standalone app.
          # - WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  # buildOSX:
  #   needs: testRunner
  #   name: Build for OSX 🖥️
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Create LFS file list
  #       run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

  #     - name: Restore LFS cache
  #       uses: actions/cache@v2
  #       id: lfs-cache
  #       with:
  #         path: .git/lfs
  #         key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

  #     - name: Git LFS Pull
  #       run: |
  #         git lfs pull
  #         git add .
  #         git reset --hard

  #     - name: Restore Library cache
  #       uses: actions/cache@v2
  #       with:
  #         path: Library
  #         key: Library-build-StandaloneOSX
  #         restore-keys: |
  #           Library-build-
  #           Library-

  #     - uses: webbertakken/unity-builder@v2
  #       with:
  #         targetPlatform: StandaloneOSX

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: build-StandaloneOSX
  #         path: build/StandaloneOSX

  #  buildWebGL:
  #    needs: testRunner
  #    name: Build for WebGL 🖥️
  #    runs-on: ubuntu-latest
  #    strategy:
  #      fail-fast: false
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #
  #      - name: Create LFS file list
  #        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
  #
  #      - name: Restore LFS cache
  #        uses: actions/cache@v2
  #        id: lfs-cache
  #        with:
  #          path: .git/lfs
  #          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
  #
  #      - name: Git LFS Pull
  #        run: |
  #          git lfs pull
  #          git add .
  #          git reset --hard
  #
  #      - name: Restore Library cache
  #        uses: actions/cache@v2
  #        with:
  #          path: Library
  #          key: Library-build-WebGL
  #          restore-keys: |
  #            Library-build-
  #            Library-
  #
  #      - uses: webbertakken/unity-builder@v2
  #        with:
  #          targetPlatform: WebGL
  #
  #      - uses: actions/upload-artifact@v2
  #        with:
  #          name: build-WebGL
  #          path: build/WebGL
  #
  #  buildWindows:
  #    needs: testRunner
  #    name: Build for Windows 🖥️
  #    runs-on: ubuntu-latest
  #    strategy:
  #      fail-fast: false
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #
  #      - name: Create LFS file list
  #        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
  #
  #      - name: Restore LFS cache
  #        uses: actions/cache@v2
  #        id: lfs-cache
  #        with:
  #          path: .git/lfs
  #          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
  #
  #      - name: Git LFS Pull
  #        run: |
  #          git lfs pull
  #          git add .
  #          git reset --hard
  #
  #      - name: Restore Library cache
  #        uses: actions/cache@v2
  #        with:
  #          path: Library
  #          key: Library-build-StandaloneWindows64
  #          restore-keys: |
  #            Library-build-
  #            Library-
  #
  #      - uses: webbertakken/unity-builder@v2
  #        with:
  #          targetPlatform: StandaloneWindows64
  #
  #      - uses: actions/upload-artifact@v2
  #        with:
  #          name: build-StandaloneWindows64
  #          path: build/StandaloneWindows64
  #
  #  buildAndroid:
  #    needs: testRunner
  #    name: Build for Android 📱
  #    runs-on: ubuntu-latest
  #    strategy:
  #      fail-fast: false
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #
  #      - name: Create LFS file list
  #        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
  #
  #      - name: Restore LFS cache
  #        uses: actions/cache@v2
  #        id: lfs-cache
  #        with:
  #          path: .git/lfs
  #          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
  #
  #      - name: Git LFS Pull
  #        run: |
  #          git lfs pull
  #          git add .
  #          git reset --hard
  #
  #      - name: Restore Library cache
  #        uses: actions/cache@v2
  #        with:
  #          path: Library
  #          key: Library-build-Android
  #          restore-keys: |
  #            Library-build-
  #            Library-
  #
  #      - uses: webbertakken/unity-builder@v2
  #        with:
  #          targetPlatform: Android
  #
  #      - uses: actions/upload-artifact@v2
  #        with:
  #          name: build-Android
  #          path: build/Android
  #
  #
  #  deployPages:
  #    needs: buildWebGL
  #    name: Deploy to Github Pages 🚀
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #
  #      - uses: actions/download-artifact@v2
  #        with:
  #          name: build-WebGL
  #          path: build
  #
  #      - name: Display structure of root files
  #        run: ls -R
  #        working-directory: build/WebGL
  #
  #      - name: Deploy 🚀
  #        uses: genie-soft/github-pages-deploy-action@4.1.4
  #        with:
  #          branch: gh-pages
  #          folder: build/WebGL
